apiVersion: v1
kind: CronJob
metadata:
  name: cron-clear-message-history
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/name: {{ include "skeleton.name" . }}
    helm.sh/chart: {{ include "skeleton.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    keel.sh/policy: all
spec:
  schedule: "0 12 * * *"
  concurrencyPolicy: Replace
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: clear-message-history
            image: "4xxi/skeleton-server:{{ .Values.server.branch }}"
            command: ["/usr/local/bin/php", "bin/console", "app:clear-message-history", "-e", "prod"]
            envFrom:
            - secretRef:
                name: skeleton-server-secret
          restartPolicy: OnFailure
---
apiVersion: v1
kind: CronJob
metadata:
  name: send-message-consumer
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/name: {{ include "skeleton.name" . }}
    helm.sh/chart: {{ include "skeleton.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    keel.sh/policy: all
spec:
  schedule: "*/1 * * * *"
  concurrencyPolicy: Replace
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: clear-message-history
            image: "4xxi/skeleton-server:{{ .Values.server.branch }}"
            command: ["/usr/local/bin/php", "bin/console"]
            args: ["rabbitmq:consumer", "send_message", "-e", "prod", "-m", "$(RABBITMQ_MAX_COUNT)"]
            envFrom:
            - configMapRef:
                name: skeleton-server-config
            - secretRef:
                name: skeleton-server-secret
            - configMapRef:
                name: rabbitmq-config
            - secretRef:
                name: rabbitmq-secret
            - secretRef:
                name: mailer-secret
            - configMapRef:
                name: mailer-config      
          restartPolicy: OnFailure
          terminationGracePeriodSeconds: 30